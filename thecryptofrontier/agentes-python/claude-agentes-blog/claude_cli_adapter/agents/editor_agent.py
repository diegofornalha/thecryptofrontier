#!/usr/bin/env python3
"""
Editor Agent - Adaptado para Claude CLI
Respons√°vel por revisar e melhorar conte√∫do
"""
from typing import Dict, Any, List
from .base_agent import BaseClaudeAgent


class EditorAgent(BaseClaudeAgent):
    """Agente especializado em edi√ß√£o e revis√£o de conte√∫do"""
    
    def __init__(self):
        super().__init__(
            name="Editor",
            role="Editor Chefe de Conte√∫do Cripto",
            goal="Garantir que todo conte√∫do seja preciso, envolvente e livre de erros",
            backstory="""Voc√™ √© um editor experiente com olhar cr√≠tico para:
            - Precis√£o t√©cnica em blockchain
            - Clareza e fluidez do texto
            - Gram√°tica e ortografia impec√°veis
            - Consist√™ncia de tom e estilo
            - Fact-checking rigoroso
            - Otimiza√ß√£o para publica√ß√£o online
            
            Voc√™ tem padr√µes elevados e sempre busca elevar
            a qualidade do conte√∫do ao m√°ximo."""
        )
    
    def execute(self, task: str, context: Dict[str, Any] = None) -> Dict[str, Any]:
        """Executa tarefa de edi√ß√£o"""
        task_file = self.create_task(task, context)
        
        return {
            "status": "task_created",
            "task_file": task_file,
            "agent": self.name
        }
    
    def edit_article(self, content: str, focus_areas: List[str] = None) -> str:
        """
        Cria tarefa para editar artigo
        """
        task_description = f"""
## Editar e Revisar Artigo

### √Åreas de Foco:
{chr(10).join(f'- {area}' for area in (focus_areas or ['gram√°tica', 'clareza', 'precis√£o t√©cnica']))}

### Conte√∫do para Revis√£o:
```markdown
{content}
```

### Checklist de Edi√ß√£o:

#### 1. Precis√£o T√©cnica ‚öôÔ∏è
- [ ] Termos t√©cnicos corretos
- [ ] Conceitos blockchain precisos
- [ ] Dados e estat√≠sticas verificados
- [ ] Links funcionais
- [ ] Informa√ß√µes atualizadas

#### 2. Clareza e Fluidez üìñ
- [ ] Par√°grafos bem estruturados
- [ ] Transi√ß√µes suaves
- [ ] Frases concisas
- [ ] Elimina√ß√£o de redund√¢ncias
- [ ] Voz ativa predominante

#### 3. Gram√°tica e Ortografia ‚úèÔ∏è
- [ ] Ortografia correta
- [ ] Pontua√ß√£o adequada
- [ ] Concord√¢ncia verbal/nominal
- [ ] Uso correto de crase
- [ ] Padroniza√ß√£o de termos

#### 4. SEO e Formata√ß√£o üîç
- [ ] Palavras-chave bem distribu√≠das
- [ ] Headers hier√°rquicos (H1, H2, H3)
- [ ] Meta descri√ß√£o otimizada
- [ ] Alt text para imagens
- [ ] Links internos relevantes

#### 5. Engajamento üí°
- [ ] T√≠tulo atrativo
- [ ] Introdu√ß√£o cativante
- [ ] CTAs claros
- [ ] Conclus√£o impactante
- [ ] Valor agregado evidente

### Sugest√µes de Melhoria:

Para cada problema encontrado, forne√ßa:
1. Localiza√ß√£o (par√°grafo/linha)
2. Problema identificado
3. Sugest√£o de corre√ß√£o
4. Justificativa

### Output Esperado:

1. **Vers√£o Editada** - Texto corrigido e melhorado
2. **Relat√≥rio de Edi√ß√£o** - Lista de mudan√ßas feitas
3. **Score de Qualidade** - Avalia√ß√£o 1-10 com justificativa
4. **Recomenda√ß√µes Adicionais** - Melhorias futuras
"""
        
        context = {
            "content": content,
            "focus_areas": focus_areas or ['all'],
            "style_guide": "professional but accessible"
        }
        
        return self.create_task(task_description, context)
    
    def fact_check(self, content: str, claims: List[str] = None) -> str:
        """
        Cria tarefa para verifica√ß√£o de fatos
        """
        task_description = f"""
## Verifica√ß√£o de Fatos

### Conte√∫do para Verificar:
```markdown
{content}
```

### Claims Espec√≠ficos para Verificar:
{chr(10).join(f'- {claim}' for claim in (claims or ['Todas as afirma√ß√µes no texto']))}

### Processo de Fact-Checking:

1. **Identificar Afirma√ß√µes**
   - Dados num√©ricos
   - Datas e eventos
   - Cita√ß√µes
   - Compara√ß√µes
   - Previs√µes

2. **Verificar Cada Afirma√ß√£o**
   - Fonte original
   - Credibilidade da fonte
   - Data da informa√ß√£o
   - Contexto completo
   - Consenso do mercado

3. **Classificar Veracidade**
   - ‚úÖ Verdadeiro - Confirmado por m√∫ltiplas fontes
   - ‚ö†Ô∏è Parcialmente verdadeiro - Necessita contexto
   - ‚ùå Falso - Incorreto ou desatualizado
   - ‚ùì N√£o verific√°vel - Falta informa√ß√£o

4. **Sugerir Corre√ß√µes**
   - Texto original
   - Corre√ß√£o sugerida
   - Fonte de refer√™ncia
   - N√≠vel de confian√ßa

### Output:
Relat√≥rio detalhado de fact-checking com todas as verifica√ß√µes
e sugest√µes de corre√ß√£o para garantir 100% de precis√£o.
"""
        
        context = {
            "content": content,
            "claims": claims,
            "verification_level": "comprehensive"
        }
        
        return self.create_task(task_description, context)