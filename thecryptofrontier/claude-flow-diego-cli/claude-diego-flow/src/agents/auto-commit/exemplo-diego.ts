/**
 * Exemplo de uso do Auto Commit Agent com mem√≥ria Mem0
 * Instru√ß√µes personalizadas do Diego
 */

import { createAutoCommitAgent } from '../auto-commit-agent';
import { diegoCommand } from './diego-commands';

async function exemploDiego() {
  console.log('ü§ñ Configurando Auto Commit Agent com instru√ß√µes do Diego...\n');

  // Criar inst√¢ncia do agente
  const agent = createAutoCommitAgent('/home/strapi/thecryptofrontier');

  // 1. Adicionar instru√ß√µes gerais do Diego
  console.log('üìù Adicionando instru√ß√µes gerais...');
  await diegoCommand('instrucao sempre usar portugu√™s nas mensagens de commit');
  await diegoCommand('instrucao incluir emojis relevantes do gitmoji');
  await diegoCommand('instrucao mencionar o n√∫mero da issue quando dispon√≠vel');
  await diegoCommand('instrucao ser espec√≠fico sobre o que foi alterado');

  // 2. Definir prefer√™ncias de commit por tipo de arquivo
  console.log('\nüéØ Configurando prefer√™ncias de commit...');
  await diegoCommand('preferencia *.tsx "‚ú® feat: {action} componente React ({files} arquivos)"');
  await diegoCommand('preferencia *.ts "üîß {action}: l√≥gica TypeScript em {files} arquivo(s)"');
  await diegoCommand('preferencia *.css "üíÑ style: {action} estilos ({files} arquivo(s))"');
  await diegoCommand('preferencia *.md "üìù docs: {action} documenta√ß√£o"');
  await diegoCommand('preferencia package.json "üì¶ deps: {action} depend√™ncias"');

  // 3. Configurar regras de ignore
  console.log('\nüö´ Configurando arquivos a ignorar...');
  await diegoCommand('ignorar node_modules depend√™ncias n√£o devem ser versionadas');
  await diegoCommand('ignorar .env arquivos de ambiente cont√™m segredos');
  await diegoCommand('ignorar *.log arquivos de log s√£o tempor√°rios');
  await diegoCommand('ignorar .DS_Store arquivos do sistema macOS');
  await diegoCommand('ignorar *.tmp arquivos tempor√°rios');

  // 4. Definir hor√°rio de trabalho
  console.log('\n‚è∞ Configurando hor√°rio de commits...');
  await diegoCommand('horario 9-18 seg-sex 15'); // Commits a cada 15 min em hor√°rio comercial

  // 5. Dar feedback sobre commits anteriores
  console.log('\nüí¨ Registrando feedback de commits...');
  await diegoCommand('feedback bom "‚ú® feat: implementa autentica√ß√£o OAuth"');
  await diegoCommand('feedback ruim "update files" "üìù docs: atualiza README com instru√ß√µes de instala√ß√£o"');
  await diegoCommand('feedback bom "üêõ fix: corrige erro de valida√ß√£o no formul√°rio"');

  // 6. Listar todas as instru√ß√µes
  console.log('\nüìã Instru√ß√µes configuradas:');
  const lista = await diegoCommand('listar');
  console.log(lista);

  // 7. Armazenar chave SSH (se fornecida)
  const sshKey = process.env.SSH_PRIVATE_KEY;
  if (sshKey) {
    console.log('\nüîë Configurando chave SSH...');
    await agent.storeSSHKey(sshKey);
  }

  console.log('\n‚úÖ Auto Commit Agent configurado com sucesso!');
  console.log('üéØ O agente agora seguir√° suas instru√ß√µes personalizadas.');
}

// Comandos √∫teis para Diego usar diretamente
export const comandosDiego = {
  // Adicionar nova instru√ß√£o
  instrucao: async (texto: string) => {
    return await diegoCommand(`instrucao ${texto}`);
  },

  // Definir prefer√™ncia de commit
  preferencia: async (padrao: string, template: string) => {
    return await diegoCommand(`preferencia ${padrao} "${template}"`);
  },

  // Ignorar arquivos
  ignorar: async (padrao: string, razao: string) => {
    return await diegoCommand(`ignorar ${padrao} ${razao}`);
  },

  // Configurar hor√°rio
  horario: async (horas: string, dias: string, freq: number) => {
    return await diegoCommand(`horario ${horas} ${dias} ${freq}`);
  },

  // Dar feedback
  feedback: async (tipo: 'bom' | 'ruim', mensagem: string, sugestao?: string) => {
    return await diegoCommand(`feedback ${tipo} "${mensagem}" ${sugestao ? `"${sugestao}"` : ''}`);
  },

  // Listar instru√ß√µes
  listar: async () => {
    return await diegoCommand('listar');
  },

  // Ver ajuda
  ajuda: async () => {
    return await diegoCommand('ajuda');
  }
};

// Executar exemplo se chamado diretamente
if (require.main === module) {
  exemploDiego().catch(console.error);
}

/**
 * INSTRU√á√ïES DE USO PARA DIEGO:
 * 
 * 1. Para adicionar uma nova instru√ß√£o:
 *    await comandosDiego.instrucao('sempre mencionar o contexto da mudan√ßa')
 * 
 * 2. Para definir como commitar arquivos React:
 *    await comandosDiego.preferencia('*.jsx', '‚öõÔ∏è react: {action} componente')
 * 
 * 3. Para ignorar um tipo de arquivo:
 *    await comandosDiego.ignorar('*.bak', 'arquivos de backup s√£o tempor√°rios')
 * 
 * 4. Para configurar hor√°rio de commits:
 *    await comandosDiego.horario('8-17', 'seg-sex', 30)
 * 
 * 5. Para dar feedback sobre um commit:
 *    await comandosDiego.feedback('bom', '‚ú® feat: novo sistema de login')
 *    await comandosDiego.feedback('ruim', 'fix stuff', 'üêõ fix: corrige valida√ß√£o de email')
 * 
 * 6. Para ver todas as instru√ß√µes:
 *    await comandosDiego.listar()
 * 
 * O Auto Commit Agent vai aprender com suas prefer√™ncias e melhorar com o tempo!
 */