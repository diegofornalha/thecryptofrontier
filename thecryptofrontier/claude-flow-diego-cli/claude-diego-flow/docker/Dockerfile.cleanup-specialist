# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Instalar ferramentas necessárias para build
RUN apk add --no-cache \
    python3 \
    make \
    g++

# Copiar arquivos de dependências
COPY package*.json ./
COPY tsconfig.json ./

# Instalar todas as dependências (incluindo dev para build)
RUN npm ci

# Copiar código fonte
COPY src/ ./src/
COPY scripts/ ./scripts/

# Skip TypeScript compilation for now due to errors
# RUN npm run build || npx tsc

# Production stage
FROM node:20-alpine

WORKDIR /app

# Instalar ferramentas necessárias
RUN apk add --no-cache \
    git \
    curl \
    bash \
    tini

# Copiar arquivos de dependências
COPY package*.json ./

# Instalar apenas dependências de produção
RUN npm ci --only=production && \
    npm cache clean --force

# Copiar source code do estágio anterior (sem build por enquanto)
# COPY --from=builder /app/dist ./dist
COPY --from=builder /app/src ./src

# Criar diretórios necessários
RUN mkdir -p /app/reports /app/logs /app/.cache /workspace

# Criar scripts de execução
RUN echo '#!/bin/sh\nnode dist/agents/cleanup-specialist-agent.js "$@"' > /app/cleanup-analyze.sh && \
    echo '#!/bin/sh\nDRY_RUN=false node dist/agents/cleanup-specialist-agent.js "$@"' > /app/cleanup-execute.sh && \
    echo '#!/bin/sh\nwhile true; do echo "Scheduler running..."; node dist/agents/cleanup-specialist-agent.js; sleep $((SCHEDULE_INTERVAL * 3600)); done' > /app/cleanup-scheduler.sh && \
    chmod +x /app/*.sh

# Adicionar scripts npm
RUN npm pkg set scripts.cleanup:analyze="node dist/agents/cleanup-specialist-agent.js" && \
    npm pkg set scripts.cleanup:execute="DRY_RUN=false node dist/agents/cleanup-specialist-agent.js" && \
    npm pkg set scripts.cleanup:scheduler="/app/cleanup-scheduler.sh" && \
    npm pkg set scripts.cleanup:aggressive="DRY_RUN=false AGGRESSIVE=true node dist/agents/cleanup-specialist-agent.js"

# User não-root para segurança
RUN addgroup -g 1001 -S cleanup && \
    adduser -u 1001 -S cleanup -G cleanup && \
    chown -R cleanup:cleanup /app && \
    chown cleanup:cleanup /workspace

USER cleanup

# Variáveis de ambiente padrão
ENV NODE_ENV=production \
    PROJECT_ROOT=/workspace \
    DRY_RUN=true \
    AGGRESSIVE=false \
    LOG_LEVEL=info

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "console.log('healthy')" || exit 1

# Use tini para gerenciar processos
ENTRYPOINT ["/sbin/tini", "--"]

# Comando padrão
CMD ["node", "dist/agents/cleanup-specialist-agent.js"]