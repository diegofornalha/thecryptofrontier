# Docker Compose Override - Desenvolvimento
# Use com: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
# Criado: 2025-06-16

version: '3.8'

services:
  # ===========================================
  # FRONTEND - Modo Desenvolvimento
  # ===========================================
  frontend:
    build:
      context: ../../
      dockerfile: Dockerfile.frontend.dev
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # ===========================================
  # STRAPI - Modo Desenvolvimento
  # ===========================================
  strapi:
    environment:
      - NODE_ENV=development
    volumes:
      - ../../strapi:/app
      - /app/node_modules
      - /app/.cache
      - /app/build
    command: npm run develop

  # ===========================================
  # POSTGRES - Expor porta em dev
  # ===========================================
  postgres:
    ports:
      - "5432:5432"

  # ===========================================
  # REDIS - Expor porta em dev
  # ===========================================
  redis:
    ports:
      - "6379:6379"

  # ===========================================
  # HOT RELOAD - Watchers
  # ===========================================
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_POLL_INTERVAL=30
    restart: unless-stopped
    networks:
      - crypto-network
    profiles:
      - dev-tools
    labels:
      - "com.thecryptofrontier.service=watchtower"
      - "com.thecryptofrontier.type=dev-tool"

  # ===========================================
  # MAILHOG - Email Testing
  # ===========================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: unless-stopped
    networks:
      - crypto-network
    profiles:
      - dev-tools
    labels:
      - "com.thecryptofrontier.service=mailhog"
      - "com.thecryptofrontier.type=dev-tool"

networks:
  crypto-network:
    external: true
    name: thecryptofrontier_network