#!/usr/bin/env python3
"""
Teste de conex√£o com Strapi v5
"""
import os
import requests
from dotenv import load_dotenv

# Carrega vari√°veis de ambiente
load_dotenv()

STRAPI_URL = os.getenv('STRAPI_URL', 'http://localhost:1338')
STRAPI_API_TOKEN = os.getenv('STRAPI_API_TOKEN')

def test_strapi_connection():
    """Testa a conex√£o com o Strapi"""
    print(f"üîç Testando conex√£o com Strapi...")
    print(f"URL: {STRAPI_URL}")
    print(f"Token: {STRAPI_API_TOKEN[:20]}...") # Mostra apenas in√≠cio do token
    
    headers = {
        'Authorization': f'Bearer {STRAPI_API_TOKEN}',
        'Content-Type': 'application/json'
    }
    
    try:
        # Testa endpoint de posts
        response = requests.get(f"{STRAPI_URL}/api/posts", headers=headers)
        
        if response.status_code == 200:
            print("‚úÖ Conex√£o com Strapi estabelecida com sucesso!")
            data = response.json()
            print(f"üìä Posts encontrados: {data.get('meta', {}).get('pagination', {}).get('total', 0)}")
            return True
        else:
            print(f"‚ùå Erro na conex√£o: Status {response.status_code}")
            print(f"Resposta: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Erro: N√£o foi poss√≠vel conectar ao Strapi")
        print("Verifique se o Strapi est√° rodando na porta 1338")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {str(e)}")
        return False

if __name__ == "__main__":
    test_strapi_connection()