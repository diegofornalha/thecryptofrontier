version: '3.8'

services:
  blog-crew:
    build: .
    container_name: crewai-blog-pipeline
    restart: unless-stopped
    environment:
      # Strapi
      - STRAPI_URL=${STRAPI_URL}
      - STRAPI_API_TOKEN=${STRAPI_API_TOKEN}
      
      # APIs
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # Configurações do Pipeline
      - ARTICLE_LIMIT=${ARTICLE_LIMIT:-10}
      - GENERATE_IMAGES=${GENERATE_IMAGES:-false}
      - RSS_FEED=${RSS_FEED:-https://thecryptobasic.com/feed/}
      
      # Timezone
      - TZ=America/Sao_Paulo
    
    volumes:
      # Persistir dados processados
      - ./processed_articles.json:/app/processed_articles.json
      - ./strapi_assets.json:/app/strapi_assets.json
      
      # Logs
      - ./logs:/app/logs
      
      # Posts processados e imagens
      - ./src/pipelines/simple/posts_processados:/app/src/pipelines/simple/posts_processados
      - ./src/pipelines/simple/posts_imagens:/app/src/pipelines/simple/posts_imagens
      
      # Arquivo .env
      - ./.env:/app/.env:ro
    
    networks:
      - crewai-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Monitor de saúde e logs (opcional)
  blog-crew-monitor:
    build: .
    container_name: crewai-blog-monitor
    command: python scripts/monitoring/monitor_service.py
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./logs:/app/logs:ro
      - ./processed_articles.json:/app/processed_articles.json:ro
    ports:
      - "8080:8080"
    networks:
      - crewai-network
    depends_on:
      - blog-crew

  # Redis cache (já existe, mas vamos garantir que esteja na mesma rede)
  redis:
    image: redis:alpine
    container_name: redis-crewai-cache
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - crewai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  crewai-network:
    driver: bridge

volumes:
  redis-data:
    name: crewai_redis_data