#!/usr/bin/env python3
"""
Cria posts usando autentica√ß√£o JWT de usu√°rio
Solu√ß√£o alternativa ao problema de permiss√µes p√∫blicas
"""
import requests
import json
from datetime import datetime
from pathlib import Path

STRAPI_URL = 'https://ale-blog.agentesintegrados.com'

print("üîê Criando posts com autentica√ß√£o JWT...\n")

# PASSO 1: Login com usu√°rio existente
print("1Ô∏è‚É£ Fazendo login...")

# Credenciais - voc√™ precisa criar este usu√°rio no Strapi
login_data = {
    "identifier": "diegofornalha",  # email ou username
    "password": "SuaSenhaAqui"  # substitua pela senha real
}

try:
    # Fazer login
    login_resp = requests.post(
        f"{STRAPI_URL}/api/auth/local",
        json=login_data,
        timeout=10
    )
    
    if login_resp.status_code == 200:
        auth_data = login_resp.json()
        jwt_token = auth_data.get('jwt')
        user_info = auth_data.get('user', {})
        
        print(f"‚úÖ Login bem-sucedido!")
        print(f"   Usu√°rio: {user_info.get('username', 'N/A')}")
        print(f"   Email: {user_info.get('email', 'N/A')}")
        print(f"   JWT Token: {jwt_token[:20]}...")
        
        # PASSO 2: Criar post com JWT
        print("\n2Ô∏è‚É£ Criando post com JWT...")
        
        # Headers com JWT
        headers = {
            'Authorization': f'Bearer {jwt_token}',
            'Content-Type': 'application/json'
        }
        
        # Carregar artigo
        writer_output_file = Path("outputs/writer_20250616_034704_output.json")
        with open(writer_output_file, 'r') as f:
            writer_data = json.load(f)
        
        article = writer_data['result']
        
        # Dados do post
        post_data = {
            "data": {
                "title": article['title'],
                "slug": article['slug'],
                "content": article['content'],
                "excerpt": article['excerpt'],
                "status": "published",
                "seo": article['seo'],
                "tags": article['tags'],
                "categories": article['categories'],
                "publishedAt": datetime.now().isoformat()
            }
        }
        
        # Criar post
        post_resp = requests.post(
            f"{STRAPI_URL}/api/posts",
            headers=headers,
            json=post_data,
            timeout=30
        )
        
        print(f"Status: {post_resp.status_code}")
        
        if post_resp.status_code in [200, 201]:
            print("‚úÖ POST CRIADO COM SUCESSO!")
            result = post_resp.json()
            post_id = result.get('data', {}).get('id')
            print(f"\nDetalhes:")
            print(f"- ID: {post_id}")
            print(f"- URL: {STRAPI_URL}/api/posts/{post_id}")
            print(f"- Admin: {STRAPI_URL}/admin/content-manager/collection-types/api::post.post/{post_id}")
            
            # Salvar JWT para uso futuro
            with open('.jwt_token', 'w') as f:
                f.write(jwt_token)
            print("\nüíæ JWT salvo em .jwt_token para uso futuro")
            
        else:
            print(f"‚ùå Erro ao criar post: {post_resp.text[:200]}")
            
    else:
        print(f"‚ùå Erro no login: {login_resp.status_code}")
        print(f"Resposta: {login_resp.text[:200]}")
        
except Exception as e:
    print(f"‚ùå Erro: {e}")

print("\n" + "="*60)
print("üìã INSTRU√á√ïES")
print("="*60)

print("\n1. CRIAR USU√ÅRIO NO STRAPI:")
print("   a) V√° em: Content Manager ‚Üí User")
print("   b) Crie um novo usu√°rio com:")
print("      - Username: blog-bot")
print("      - Email: bot@blog.com")
print("      - Password: uma senha segura")
print("      - Role: Authenticated")
print("      - Confirmed: true")

print("\n2. CONFIGURAR PERMISS√ïES:")
print("   a) Settings ‚Üí Roles ‚Üí Authenticated")
print("   b) Marque para Post:")
print("      ‚úÖ find")
print("      ‚úÖ findOne")
print("      ‚úÖ create")
print("      ‚úÖ update (pr√≥prios posts)")

print("\n3. ATUALIZAR ESTE SCRIPT:")
print("   - Substitua 'identifier' e 'password' com as credenciais")
print("   - Execute novamente")

print("\n4. AUTOMATIZAR COM JWT SALVO:")
print("   - O JWT ser√° salvo em .jwt_token")
print("   - Use em scripts futuros sem precisar fazer login")