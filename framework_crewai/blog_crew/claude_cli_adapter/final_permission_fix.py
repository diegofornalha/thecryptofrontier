#!/usr/bin/env python3
"""
Solu√ß√£o final - Verifica configura√ß√£o do API Token
"""
import requests
import json

STRAPI_URL = 'https://ale-blog.agentesintegrados.com'
API_TOKEN = 'ab8697c0e78c05e854a8c9015eb8d014de93f3e04204362662276ef77d2a16fe670a7fd06da6df76c985a9cea62e5e831c5d655a4f7409d8e7067723e197df9087d8dadbd1df381c2f7b04f9e8c7eb77cb84c8a44bb7941a2f034272ad9635f377580a78febb90fe2ef9eddfcebe577183dade06167a0abbf5f60d80683753cd'

headers = {
    'Authorization': f'Bearer {API_TOKEN}',
    'Content-Type': 'application/json'
}

print("üîç An√°lise Final do Problema\n")

# 1. Verificar tipo de autentica√ß√£o
print("1Ô∏è‚É£ Verificando tipo de token...")
endpoints_to_check = [
    '/api/users/me',  # JWT token
    '/admin/api/users/me',  # Admin user
    '/api/auth/me',  # Auth endpoint
    '/admin/api/api-tokens/current'  # API token info
]

token_type = None
for endpoint in endpoints_to_check:
    try:
        resp = requests.get(f"{STRAPI_URL}{endpoint}", headers=headers, timeout=5)
        if resp.status_code == 200:
            print(f"‚úÖ {endpoint}: Funcionou!")
            token_type = endpoint
            break
        else:
            print(f"‚ùå {endpoint}: {resp.status_code}")
    except:
        pass

# 2. Verificar se √© problema de Public vs Authenticated
print("\n2Ô∏è‚É£ Testando diferentes roles...")

# Testar sem token (Public)
print("\nTestando acesso p√∫blico (sem token):")
resp = requests.get(f"{STRAPI_URL}/api/posts")
print(f"GET sem token: {resp.status_code}")

# Testar com token
print("\nTestando com token:")
resp = requests.get(f"{STRAPI_URL}/api/posts", headers=headers)
print(f"GET com token: {resp.status_code}")

# 3. Solu√ß√£o baseada no que descobrimos
print("\n" + "="*50)
print("üìã DIAGN√ìSTICO FINAL")
print("="*50)

print("\nüîç O que descobrimos:")
print("- GET /api/posts funciona (n√£o retorna mais 404)")
print("- Mas POST n√£o est√° permitido (erro 405)")
print("- O token Full Access est√° v√°lido")

print("\n‚ùå Problema:")
print("No Strapi v5, tokens Full Access podem ter configura√ß√µes pr√≥prias")
print("que sobrescrevem as permiss√µes dos roles.")

print("\n‚úÖ SOLU√á√ÉO DEFINITIVA:")
print("\n1. No Painel Admin do Strapi:")
print("   - V√° em Settings ‚Üí API Tokens")
print("   - Encontre o token que termina em '...753cd'")
print("   - Clique para editar")
print("\n2. Na p√°gina do token:")
print("   - Verifique se est√° como 'Full access'")
print("   - Se houver uma se√ß√£o 'Content-type permissions':")
print("     ‚Ä¢ Encontre 'Post'")
print("     ‚Ä¢ Marque: ‚úÖ find ‚úÖ findOne ‚úÖ create")
print("   - Se n√£o houver, procure um bot√£o 'Configure permissions'")
print("\n3. Salve as altera√ß√µes")

print("\nüí° ALTERNATIVA:")
print("Se n√£o encontrar as op√ß√µes acima, crie um NOVO token:")
print("1. Settings ‚Üí API Tokens ‚Üí Create new API Token")
print("2. Nome: 'Blog CrewAI'")
print("3. Token type: 'Full access'")
print("4. Na se√ß√£o de permiss√µes, marque tudo para 'Post'")
print("5. Salve e use o novo token")

print("\nüéØ Ap√≥s configurar, teste com:")
print("curl -X POST -H 'Authorization: Bearer SEU_TOKEN' \\")
print("     -H 'Content-Type: application/json' \\")
print("     -d '{\"data\":{\"title\":\"Teste\"}}' \\")
print("     https://ale-blog.agentesintegrados.com/api/posts")