version: '3.8'

services:
  # Frontend NextJS - agora rodando em Docker
  nextjs:
    build:
      context: ..
      dockerfile: Dockerfile.nextjs
    container_name: sanity-thecryptofrontier
    ports:
      - "3000:3000"  # Expor na porta 3000 para acesso direto se necessário
    environment:
      - NODE_ENV=production
      - SANITY_PREVIEW=false
      - NEXT_PUBLIC_SANITY_PROJECT_ID=brby2yrg
      - NEXT_PUBLIC_SANITY_DATASET=production
      - NEXT_PUBLIC_SANITY_API_VERSION=2023-05-03
      # Variáveis para suporte a proxy
      - NEXT_PUBLIC_PROXY_ENABLED=true
      - NEXT_PUBLIC_ASSETS_PREFIX=/frontend
      - PROXY_BASE_PATH=/frontend
    restart: unless-stopped
    networks:
      - crewai-network

  # Serviço Streamlit para interface de usuário
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit-crewai-ui
    # Expor na porta 8501 para acesso direto se necessário
    ports:
      - "8501:8501"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SANITY_PROJECT_ID=${SANITY_PROJECT_ID}
      - SANITY_API_TOKEN=${SANITY_API_TOKEN}
      - NEXT_PUBLIC_ALGOLIA_APP_ID=${NEXT_PUBLIC_ALGOLIA_APP_ID}
      - NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY=${NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY}
      - PROXY_ENABLED=true
    volumes:
      - .:/app
      - ./.streamlit:/root/.streamlit  # Garantir que a config do Streamlit seja montada
    working_dir: /app
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - crewai-network
    command: ["streamlit", "run", "app_modular.py", "--server.port=8501", "--server.address=0.0.0.0"]
    
  # Serviço Redis para cache e filas
  redis:
    image: redis:alpine
    container_name: redis-crewai-cache
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - crewai-network
  
  # Proxy reverso Caddy
  caddy:
    image: caddy:2
    container_name: caddy-crewai-proxy
    restart: unless-stopped
    ports:
      - "8080:8080"  # Exposição na porta 8080 conforme Caddyfile
      - "3200:3200"  # Exposição na porta 3200 adicional
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./static:/app/static
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - crewai-network
    depends_on:
      - streamlit
      - nextjs

volumes:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  crewai-network:
    driver: bridge