version: '3.8'

services:
  strapi:
    container_name: strapi-cms
    image: strapi/strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=strapi
      - DATABASE_PASSWORD=strapi_password
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - APP_KEYS=${APP_KEYS}
      - NODE_ENV=development
    volumes:
      - ./app:/srv/app
    ports:
      - "1337:1337"
    networks:
      - strapi-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14-alpine
    container_name: strapi-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=strapi
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=strapi_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - strapi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  strapi-network:
    driver: bridge

volumes:
  postgres-data:
    name: strapi_postgres_data