#!/bin/bash
# Script de instala√ß√£o automatizada do DiegoTools MCP para Linux
# Projeto: The Crypto Frontier

# Cores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Iniciando instala√ß√£o do DiegoTools MCP...${NC}"
echo -e "${YELLOW}üìç Projeto: The Crypto Frontier${NC}"
echo ""

# Diret√≥rio base
MCP_DIR="/home/strapi/thecryptofrontier/claude-flow-diego/mcp-diego-tools"

# Verificar se o diret√≥rio existe
if [ ! -d "$MCP_DIR" ]; then
    echo -e "${RED}‚ùå Erro: Diret√≥rio $MCP_DIR n√£o encontrado!${NC}"
    exit 1
fi

# Verificar se o Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Erro: Node.js n√£o est√° instalado!${NC}"
    echo "Por favor, instale o Node.js 18+ primeiro."
    exit 1
fi

# Verificar vers√£o do Node.js
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo -e "${RED}‚ùå Erro: Node.js vers√£o $NODE_VERSION detectada. Vers√£o 18+ √© necess√°ria!${NC}"
    exit 1
fi

# Verificar se o Claude CLI est√° instalado
if ! command -v claude &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Claude CLI n√£o encontrado. Instalando...${NC}"
    npm install -g @anthropic-ai/claude-code
fi

# Navegar para o diret√≥rio
cd "$MCP_DIR" || exit 1

# Limpar builds anteriores
echo -e "${GREEN}üßπ Limpando builds anteriores...${NC}"
rm -rf build node_modules

# Instalar depend√™ncias
echo -e "${GREEN}üì¶ Instalando depend√™ncias...${NC}"
npm install

# Compilar projeto
echo -e "${GREEN}üî® Compilando projeto...${NC}"
npm run build

# Verificar se o build foi bem-sucedido
if [ ! -d "build" ]; then
    echo -e "${RED}‚ùå Erro: Build falhou!${NC}"
    exit 1
fi

# Tornar run.sh execut√°vel
chmod +x run.sh

# Remover instala√ß√£o anterior
echo -e "${GREEN}üóëÔ∏è  Removendo instala√ß√£o anterior...${NC}"
claude mcp remove DiegoTools -s user 2>/dev/null

# Solicitar tokens se n√£o estiverem definidos
echo ""
echo -e "${YELLOW}üîë Configura√ß√£o de Tokens${NC}"
echo "Voc√™ precisar√° fornecer os seguintes tokens:"
echo "1. GitHub Token (https://github.com/settings/tokens)"
echo "2. Mem0 API Key (https://app.mem0.ai)"
echo ""

# Verificar se os tokens est√£o em vari√°veis de ambiente
if [ -z "$GITHUB_TOKEN" ]; then
    read -p "Digite seu GitHub Token (ou pressione Enter para adicionar depois): " github_token
else
    github_token=$GITHUB_TOKEN
    echo "‚úì GitHub Token detectado das vari√°veis de ambiente"
fi

if [ -z "$MEM0_API_KEY" ]; then
    read -p "Digite sua Mem0 API Key (ou pressione Enter para adicionar depois): " mem0_key
else
    mem0_key=$MEM0_API_KEY
    echo "‚úì Mem0 API Key detectada das vari√°veis de ambiente"
fi

# Construir comando de instala√ß√£o
echo ""
echo -e "${GREEN}‚ûï Comando para adicionar DiegoTools ao Claude:${NC}"
echo ""

install_cmd="claude mcp add DiegoTools $MCP_DIR/run.sh"

if [ ! -z "$github_token" ]; then
    install_cmd="$install_cmd --env GITHUB_TOKEN=$github_token"
else
    install_cmd="$install_cmd --env GITHUB_TOKEN=seu_token_aqui"
fi

if [ ! -z "$mem0_key" ]; then
    install_cmd="$install_cmd --env MEM0_API_KEY=$mem0_key"
else
    install_cmd="$install_cmd --env MEM0_API_KEY=sua_chave_aqui"
fi

install_cmd="$install_cmd --env MEM0_BASE_URL=https://api.mem0.ai -s user"

# Se tokens foram fornecidos, executar automaticamente
if [ ! -z "$github_token" ] && [ ! -z "$mem0_key" ]; then
    echo -e "${GREEN}üöÄ Executando instala√ß√£o...${NC}"
    eval $install_cmd
    
    # Verificar instala√ß√£o
    echo ""
    echo -e "${GREEN}üîç Verificando instala√ß√£o...${NC}"
    claude mcp list | grep DiegoTools
    
    if [ $? -eq 0 ]; then
        echo ""
        echo -e "${GREEN}‚úÖ DiegoTools instalado com sucesso!${NC}"
        echo ""
        echo -e "${YELLOW}üìù Teste a instala√ß√£o com:${NC}"
        echo "cd $MCP_DIR"
        echo "npx ts-node src/cli.ts agent create gitManager"
    else
        echo -e "${RED}‚ùå Erro na instala√ß√£o. Verifique os logs acima.${NC}"
    fi
else
    # Mostrar comando para o usu√°rio executar manualmente
    echo "$install_cmd"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  Copie e execute o comando acima depois de substituir os tokens!${NC}"
    echo ""
    echo -e "${GREEN}‚úÖ Build conclu√≠do com sucesso!${NC}"
fi

echo ""
echo -e "${GREEN}üìö Documenta√ß√£o completa em:${NC}"
echo "/home/strapi/thecryptofrontier/strapi/docs/mcp-diego-tools-linux-install.md"