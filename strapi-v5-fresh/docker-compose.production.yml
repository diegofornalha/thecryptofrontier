version: '3.8'

services:
  strapi:
    container_name: strapi-v5
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: strapi:v5-production
    restart: always
    env_file: .env.production
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi-v5-postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
    volumes:
      - ./public/uploads:/opt/app/public/uploads
      - strapi-logs:/opt/app/logs
    ports:
      - '1338:1337'
    networks:
      - strapi-network
    depends_on:
      strapi-v5-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  strapi-v5-postgres:
    container_name: strapi-v5-postgres
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - strapi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    container_name: strapi-nginx
    image: nginx:alpine
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - strapi-network
    depends_on:
      - strapi

volumes:
  postgres-data:
  strapi-logs:
  nginx-logs:

networks:
  strapi-network:
    driver: bridge